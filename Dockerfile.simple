# Simple single-stage Dockerfile for Railway deployment
FROM node:18-alpine

# Install Python and build tools
RUN apk add --no-cache \
    python3 \
    py3-pip \
    gcc \
    g++ \
    curl \
    && ln -sf python3 /usr/bin/python

# Set working directory
WORKDIR /app

# Copy frontend package files
COPY frontend/package*.json ./frontend/

# Install frontend dependencies
WORKDIR /app/frontend
RUN npm ci

# Copy frontend source and build
COPY frontend/ ./
RUN npm run build

# Go back to root and install Python dependencies
WORKDIR /app
COPY backend/requirements.txt ./
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy backend code
COPY backend/ .

# Copy built frontend to backend directory
RUN cp -r frontend/dist ./dist

# Create non-root user
RUN adduser -D app && chown -R app:app /app
USER app

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/health || exit 1

# Run the application
CMD ["python3", "-u", "app.py"]
